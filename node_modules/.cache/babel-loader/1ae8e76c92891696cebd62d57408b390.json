{"ast":null,"code":"import { ReactReduxContext } from 'react-redux';\nimport { http } from '../../config/globalConfig';\nexport const actionTypes = {\n  GET_TOKEN: 'GET_TOKEN',\n  LOGOUT: 'LOGOUT',\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR',\n  CHANGE: 'CHANGE'\n};\nexport const getToken = token => ({\n  type: actionTypes.GET_TOKEN,\n  token\n});\nexport const removeToken = () => ({\n  type: actionTypes.LOGOUT\n});\nexport const loginSuccess = bool => ({\n  type: actionTypes.SUCCESS,\n  bool\n});\nexport const loginError = error => ({\n  type: actionTypes.ERROR,\n  error\n});\nexport const changeValue = payload => ({\n  type: actionTypes.CHANGE,\n  payload\n});\nexport const loading = (bool, msg = null) => ({\n  type: actionTypes.CHANGE,\n  isLoading: {\n    active: bool,\n    msg: msg\n  }\n});\nexport const getUserToken = () => dispatch => localStorage.getItem('access_token').then(res => {\n  dispatch(loading(false));\n\n  if (typeof res !== 'undefined') {\n    dispatch(getToken(res));\n  }\n});\nexport const setUserToken = token => dispatch => {\n  localStorage.setItem('access_token', token);\n  dispatch(loading(false));\n  dispatch(loginSuccess(true));\n};\nexport const login = credentials => {\n  return dispatch => {\n    dispatch(loading(true));\n    return http.post('/oauth/token', {\n      grant_type: 'password',\n      client_id: '',\n      client_secret: '',\n      username: credentials.username,\n      password: credentials.password\n    }).then(res => {\n      console.log(res);\n      dispatch(loading(false));\n\n      if (typeof res !== 'undefined') {\n        dispatch(setUserToken(res.data.access_token));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/alexandre/Documentos/projeto-c2a/src/store/actions/auth.action.js"],"names":["ReactReduxContext","http","actionTypes","GET_TOKEN","LOGOUT","SUCCESS","ERROR","CHANGE","getToken","token","type","removeToken","loginSuccess","bool","loginError","error","changeValue","payload","loading","msg","isLoading","active","getUserToken","dispatch","localStorage","getItem","then","res","setUserToken","setItem","login","credentials","post","grant_type","client_id","client_secret","username","password","console","log","data","access_token"],"mappings":"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","sourcesContent":["import { ReactReduxContext } from 'react-redux';\nimport {http} from '../../config/globalConfig';\n\nexport const actionTypes = {\n    GET_TOKEN : 'GET_TOKEN',\n    LOGOUT : 'LOGOUT',\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERROR',\n    CHANGE: 'CHANGE'\n}\n\n\nexport const getToken = (token) => ({\n    type: actionTypes.GET_TOKEN,\n    token\n})\n\n\nexport const removeToken = () => ({\n    type: actionTypes.LOGOUT,\n})\n\nexport const loginSuccess = bool => ({\n    type: actionTypes.SUCCESS,\n    bool\n})\n\nexport const loginError = (error) => ({\n    type: actionTypes.ERROR,\n    error\n})\n\n\nexport const changeValue = (payload) => ({\n    type: actionTypes.CHANGE,\n    payload\n})\n\nexport const loading = (bool, msg = null) => ({\n    type: actionTypes.CHANGE,\n    isLoading: {\n        active: bool,\n        msg: msg\n    }\n})\n\nexport const getUserToken = () => dispatch => \nlocalStorage.getItem('access_token')\n.then(res =>{\n    dispatch(loading(false));\n    if(typeof res !== 'undefined'){\n        dispatch(getToken(res));\n    }\n})\n\nexport const setUserToken = (token) => dispatch => {\n    localStorage.setItem('access_token', token);\n    dispatch(loading(false))\n    dispatch(loginSuccess(true))\n}\n\nexport const login = (credentials) => {\n    return dispatch => {\n        dispatch(loading(true));\n        return http.post('/oauth/token',{\n            grant_type: 'password',\n            client_id:  '',\n            client_secret: '',\n            username: credentials.username,\n            password: credentials.password\n        })\n        .then(res => {\n            console.log(res);\n            dispatch(loading(false));\n            if(typeof res !== 'undefined'){\n                dispatch(setUserToken(res.data.access_token))\n\n            }\n        })\n    \n    }\n}"]},"metadata":{},"sourceType":"module"}